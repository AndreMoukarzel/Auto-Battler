[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://urm2kb3iy4wq"]

[sub_resource type="VisualShaderNodeUVPolarCoord" id="VisualShaderNodeUVPolarCoord_2ku4u"]
default_input_values = [1, Vector2(0.5, 0.5), 2, 0.485, 3, 1.0]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_xg55k"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_cep0f"]
constant = Color(1, 1, 0.466667, 1)

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;




void fragment() {
// ColorConstant:8
	vec4 n_out8p0 = vec4(1.000000, 1.000000, 0.466667, 1.000000);


	vec2 n_out6p0;
// UVPolarCoord:6
	vec2 n_in6p1 = vec2(0.50000, 0.50000);
	float n_in6p2 = 0.48500;
	float n_in6p3 = 1.00000;
	{
		vec2 __dir = UV - n_in6p1;
		float __radius = length(__dir) * 2.0;
		float __angle = atan(__dir.y, __dir.x) * 1.0 / (PI * 2.0);
		n_out6p0 = vec2(__radius * n_in6p2, __angle * n_in6p3);
	}


// VectorDecompose:7
	float n_out7p0 = vec3(n_out6p0, 0.0).x;
	float n_out7p1 = vec3(n_out6p0, 0.0).y;
	float n_out7p2 = vec3(n_out6p0, 0.0).z;


// Output:0
	ALBEDO = vec3(n_out8p0.xyz);
	ALPHA = n_out7p0;


}
"
graph_offset = Vector2(-338.457, 22.1197)
nodes/fragment/6/node = SubResource("VisualShaderNodeUVPolarCoord_2ku4u")
nodes/fragment/6/position = Vector2(-340, 320)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorDecompose_xg55k")
nodes/fragment/7/position = Vector2(160, 300)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorConstant_cep0f")
nodes/fragment/8/position = Vector2(164.775, 171.475)
nodes/fragment/connections = PackedInt32Array(6, 0, 7, 0, 7, 0, 0, 1, 8, 0, 0, 0)
